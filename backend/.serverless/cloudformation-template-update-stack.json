{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "ConnectLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/esp-ws-api-gateway-local-connect"
      }
    },
    "CreateProcessLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/esp-ws-api-gateway-local-createProcess"
      }
    },
    "DisconnectLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/esp-ws-api-gateway-local-disconnect"
      }
    },
    "NotifyStreamLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/esp-ws-api-gateway-local-notifyStream"
      }
    },
    "StartProcessLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/esp-ws-api-gateway-local-startProcess"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "esp-ws-api-gateway",
                  "local",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/esp-ws-api-gateway-local*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/esp-ws-api-gateway-local*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:Query"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "DynamoDBTableProcessCreationStatus",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:SendMessage",
                    "sqs:DeleteMessage"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:esp-ws-api-gateway-sqs-local-queue-create-process.fifo"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "kms:Decrypt",
                    "kms:GenerateDataKey"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "execute-api:ManageConnections"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:execute-api:*:*:*/@connections/*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetRecords",
                    "dynamodb:GetShardIterator",
                    "dynamodb:DescribeStream",
                    "dynamodb:ListStreams"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "DynamoDBTableProcessCreationStatus",
                        "StreamArn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:esp-ws-api-gateway-sqs-local-queue-create-process.fifo"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "esp-ws-api-gateway",
              "local",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "ConnectLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/esp-ws-api-gateway/local/1617911749320-2021-04-08T19:55:49.320Z/connect.zip"
        },
        "FunctionName": "esp-ws-api-gateway-local-connect",
        "Handler": "src/handlers/connect.main",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "PROCESS_CREATION_STATUS_TABLE": "esp-ws-api-gateway-dynamodb-local-table-process-creation-status",
            "CREATE_PROCESS_SQS_QUEUE_URL": {
              "Fn::Sub": "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/esp-ws-api-gateway-sqs-local-queue-create-process.fifo"
            },
            "APP_STAGE": "local"
          }
        }
      },
      "DependsOn": [
        "ConnectLogGroup"
      ]
    },
    "ConnectLambdaVersion3v08mJmuLY9ffvjBonH69FmEtMel5zbGYQYXt4xfI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ConnectLambdaFunction"
        },
        "CodeSha256": "UUHILboFOTk1NkHHSyjs4cEFvxuyAoOIBfZuQ+IMkwQ="
      }
    },
    "CreateProcessLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/esp-ws-api-gateway/local/1617911749320-2021-04-08T19:55:49.320Z/createProcess.zip"
        },
        "FunctionName": "esp-ws-api-gateway-local-createProcess",
        "Handler": "src/handlers/create-process.main",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "PROCESS_CREATION_STATUS_TABLE": "esp-ws-api-gateway-dynamodb-local-table-process-creation-status",
            "CREATE_PROCESS_SQS_QUEUE_URL": {
              "Fn::Sub": "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/esp-ws-api-gateway-sqs-local-queue-create-process.fifo"
            },
            "APP_STAGE": "local"
          }
        }
      },
      "DependsOn": [
        "CreateProcessLogGroup"
      ]
    },
    "CreateProcessLambdaVersion4sqnyOpLXbTYIqPShnu5loZkBsuE5kZ5ZwCaDMS6KY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateProcessLambdaFunction"
        },
        "CodeSha256": "UUHILboFOTk1NkHHSyjs4cEFvxuyAoOIBfZuQ+IMkwQ="
      }
    },
    "DisconnectLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/esp-ws-api-gateway/local/1617911749320-2021-04-08T19:55:49.320Z/disconnect.zip"
        },
        "FunctionName": "esp-ws-api-gateway-local-disconnect",
        "Handler": "src/handlers/disconnect.main",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "PROCESS_CREATION_STATUS_TABLE": "esp-ws-api-gateway-dynamodb-local-table-process-creation-status",
            "CREATE_PROCESS_SQS_QUEUE_URL": {
              "Fn::Sub": "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/esp-ws-api-gateway-sqs-local-queue-create-process.fifo"
            },
            "APP_STAGE": "local"
          }
        }
      },
      "DependsOn": [
        "DisconnectLogGroup"
      ]
    },
    "DisconnectLambdaVersiony54MqmbooR0ctONAyRtEqZk5xGPbCMrTcQ7C5pV4tUY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DisconnectLambdaFunction"
        },
        "CodeSha256": "UUHILboFOTk1NkHHSyjs4cEFvxuyAoOIBfZuQ+IMkwQ="
      }
    },
    "NotifyStreamLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/esp-ws-api-gateway/local/1617911749320-2021-04-08T19:55:49.320Z/notifyStream.zip"
        },
        "FunctionName": "esp-ws-api-gateway-local-notifyStream",
        "Handler": "src/handlers/notify-stream.main",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "PROCESS_CREATION_STATUS_TABLE": "esp-ws-api-gateway-dynamodb-local-table-process-creation-status",
            "CREATE_PROCESS_SQS_QUEUE_URL": {
              "Fn::Sub": "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/esp-ws-api-gateway-sqs-local-queue-create-process.fifo"
            },
            "APP_STAGE": "local"
          }
        }
      },
      "DependsOn": [
        "NotifyStreamLogGroup"
      ]
    },
    "NotifyStreamLambdaVersionN4oOx1BKo6CFrBzkqh6ap2TnH5arg8IXxlFQ1ovw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "NotifyStreamLambdaFunction"
        },
        "CodeSha256": "UUHILboFOTk1NkHHSyjs4cEFvxuyAoOIBfZuQ+IMkwQ="
      }
    },
    "StartProcessLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/esp-ws-api-gateway/local/1617911749320-2021-04-08T19:55:49.320Z/startProcess.zip"
        },
        "FunctionName": "esp-ws-api-gateway-local-startProcess",
        "Handler": "src/handlers/start-process.main",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "PROCESS_CREATION_STATUS_TABLE": "esp-ws-api-gateway-dynamodb-local-table-process-creation-status",
            "CREATE_PROCESS_SQS_QUEUE_URL": {
              "Fn::Sub": "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/esp-ws-api-gateway-sqs-local-queue-create-process.fifo"
            },
            "APP_STAGE": "local"
          }
        }
      },
      "DependsOn": [
        "StartProcessLogGroup"
      ]
    },
    "StartProcessLambdaVersionYk7wVBUrm1B6DA2MseNsupARaTflby5fBzk5aLeIBo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "StartProcessLambdaFunction"
        },
        "CodeSha256": "UUHILboFOTk1NkHHSyjs4cEFvxuyAoOIBfZuQ+IMkwQ="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "local-esp-ws-api-gateway",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": "",
        "MinimumCompressionSize": 1024
      }
    },
    "ApiGatewayResourceProcess": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "process",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceProcessUuidVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceProcess"
        },
        "PathPart": "{uuid}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceProcessUuidVarStart": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceProcessUuidVar"
        },
        "PathPart": "start",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodProcessUuidVarStartPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {
          "method.request.path.uuid": true
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceProcessUuidVarStart"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "StartProcessLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1617911729355": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "local"
      },
      "DependsOn": [
        "ApiGatewayMethodProcessUuidVarStartPost"
      ]
    },
    "StartProcessLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "StartProcessLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "WebsocketsApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "local-esp-ws-api-gateway-websockets",
        "RouteSelectionExpression": "$request.body.action",
        "Description": "Serverless Websockets",
        "ProtocolType": "WEBSOCKET"
      }
    },
    "ConnectWebsocketsIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "ConnectLambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        }
      }
    },
    "DisconnectWebsocketsIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "DisconnectLambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        }
      }
    },
    "ConnectLambdaPermissionWebsockets": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WebsocketsApi",
        "ConnectLambdaFunction"
      ],
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ConnectLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "DisconnectLambdaPermissionWebsockets": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WebsocketsApi",
        "DisconnectLambdaFunction"
      ],
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DisconnectLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "SconnectWebsocketsRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "RouteKey": "$connect",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "ConnectWebsocketsIntegration"
              }
            ]
          ]
        }
      }
    },
    "SdisconnectWebsocketsRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "RouteKey": "$disconnect",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "DisconnectWebsocketsIntegration"
              }
            ]
          ]
        }
      }
    },
    "WebsocketsDeploymentStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "StageName": "local",
        "Description": "Serverless Websockets",
        "DeploymentId": {
          "Ref": "WebsocketsDeploymentvoptbjzBm50hOuES2HI9HjeiTLUL2poohA0VgSMHaI"
        }
      }
    },
    "WebsocketsDeploymentvoptbjzBm50hOuES2HI9HjeiTLUL2poohA0VgSMHaI": {
      "Type": "AWS::ApiGatewayV2::Deployment",
      "DependsOn": [
        "SconnectWebsocketsRoute",
        "SdisconnectWebsocketsRoute"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "Description": "Serverless Websockets"
      }
    },
    "NotifyStreamEventSourceMappingDynamodbDynamoDBTableProcessCreationStatus": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "DynamoDBTableProcessCreationStatus",
            "StreamArn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "NotifyStreamLambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "TRIM_HORIZON",
        "Enabled": true
      }
    },
    "CreateProcessEventSourceMappingSQSEspwsapigatewaysqslocalqueuecreateprocessfifo": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::Sub": "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:esp-ws-api-gateway-sqs-local-queue-create-process.fifo"
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateProcessLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "DynamoDBTableProcessCreationStatus": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "uuid",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "uuid",
            "KeyType": "HASH"
          }
        ],
        "SSESpecification": {
          "SSEEnabled": true
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        },
        "TableName": "esp-ws-api-gateway-dynamodb-local-table-process-creation-status"
      }
    },
    "CreateProcessDlqSqsQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "esp-ws-api-gateway-sqs-local-queue-create-process-dlq.fifo",
        "FifoQueue": true,
        "ContentBasedDeduplication": true,
        "KmsMasterKeyId": "alias/aws/sqs",
        "Tags": [
          {
            "Key": "Name",
            "Value": "esp-ws-api-gateway-sqs-local-queue-create-process-dlq.fifo"
          }
        ]
      }
    },
    "CreateProcessSqsQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "esp-ws-api-gateway-sqs-local-queue-create-process.fifo",
        "FifoQueue": true,
        "ContentBasedDeduplication": true,
        "VisibilityTimeout": 60,
        "MessageRetentionPeriod": 10800,
        "KmsMasterKeyId": "alias/aws/sqs",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "CreateProcessDlqSqsQueue",
              "Arn"
            ]
          },
          "maxReceiveCount": 5
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "esp-ws-api-gateway-sqs-local-queue-create-process.fifo"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "ConnectLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ConnectLambdaVersion3v08mJmuLY9ffvjBonH69FmEtMel5zbGYQYXt4xfI"
      }
    },
    "CreateProcessLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateProcessLambdaVersion4sqnyOpLXbTYIqPShnu5loZkBsuE5kZ5ZwCaDMS6KY"
      }
    },
    "DisconnectLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DisconnectLambdaVersiony54MqmbooR0ctONAyRtEqZk5xGPbCMrTcQ7C5pV4tUY"
      }
    },
    "NotifyStreamLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "NotifyStreamLambdaVersionN4oOx1BKo6CFrBzkqh6ap2TnH5arg8IXxlFQ1ovw"
      }
    },
    "StartProcessLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "StartProcessLambdaVersionYk7wVBUrm1B6DA2MseNsupARaTflby5fBzk5aLeIBo"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/local"
          ]
        ]
      }
    },
    "ServiceEndpointWebsocket": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "wss://",
            {
              "Ref": "WebsocketsApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/local"
          ]
        ]
      }
    }
  }
}